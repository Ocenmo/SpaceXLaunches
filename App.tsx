/**
 * Aplicaci√≥n Principal - SpaceX Launches
 *
 * Este es el punto de entrada de la aplicaci√≥n que configura la estructura
 * de navegaci√≥n completa usando React Navigation v6.
 *
 * Arquitectura de navegaci√≥n implementada:
 * Stack Navigator (ra√≠z)
 * ‚îú‚îÄ‚îÄ MainTabs (Tab Navigator)
 * ‚îÇ   ‚îú‚îÄ‚îÄ PastLaunches (Lista de lanzamientos pasados)
 * ‚îÇ   ‚îî‚îÄ‚îÄ UpcomingLaunches (Lista de lanzamientos futuros)
 * ‚îî‚îÄ‚îÄ LaunchDetail (Pantalla de detalle modal)
 *
 * Caracter√≠sticas del dise√±o:
 * - Navegaci√≥n h√≠brida Stack + Tabs para m√°xima flexibilidad
 * - Tipado estricto de rutas con TypeScript
 * - Configuraci√≥n de tema consistente
 * - StatusBar autom√°tica seg√∫n el sistema
 * - NativeWind configurado globalmente
 *
 * UX Decisions:
 * - Tabs para funciones principales (f√°cil switching)
 * - Stack para detalles (preserva contexto con back)
 * - Iconos emoji para claridad universal
 * - Colores que siguen el design system (blue-500, gray-500)
 */

import React from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import { StatusBar } from 'expo-status-bar';
import { Text } from 'react-native';

// Importar estilos globales de NativeWind - debe ser lo primero
import './global.css';

// Tipos de navegaci√≥n tipados con TypeScript
import { RootStackParamList, TabParamList } from '@/types/navigation.types';

// Pantallas de la aplicaci√≥n organizadas por feature
import { PastLaunchesScreen } from '@/screens/PastLaunches/PastLaunchesScreen';
import { UpcomingLaunchesScreen } from '@/screens/UpcomingLaunches';
import { LaunchDetailScreen } from '@/screens/LaunchDetail';

// Navigators tipados para type safety
const Stack = createStackNavigator<RootStackParamList>();
const Tab = createBottomTabNavigator<TabParamList>();

/**
 * Navegador de pesta√±as (Tab Navigator)
 * Contiene las pantallas principales de la aplicaci√≥n
 */
const TabNavigator = () => {
  return (
    <Tab.Navigator
      screenOptions={{
        // Colores que siguen nuestro design system
        tabBarActiveTintColor: '#3B82F6',      // blue-500: color principal activo
        tabBarInactiveTintColor: '#6B7280',    // gray-500: color inactivo

        // Estilo de la barra de pesta√±as
        tabBarStyle: {
          backgroundColor: '#FFFFFF',          // Fondo blanco limpio
          borderTopWidth: 1,                   // Borde superior sutil
          borderTopColor: '#E5E7EB',          // gray-200: separaci√≥n elegante
        },
      }}
    >
      {/* Pesta√±a 1: Lanzamientos Pasados */}
      <Tab.Screen
        name="PastLaunches"
        component={PastLaunchesScreen}
        options={{
          title: 'Lanzamientos Pasados',
          tabBarIcon: ({ color }) => (
            <Text style={{ color, fontSize: 18 }}>üöÄ</Text>  // Emoji universal y claro
          )
        }}
      />

      {/* Pesta√±a 2: Pr√≥ximos Lanzamientos */}
      <Tab.Screen
        name="UpcomingLaunches"
        component={UpcomingLaunchesScreen}
        options={{
          title: 'Pr√≥ximos Lanzamientos',
          tabBarIcon: ({ color }) => (
            <Text style={{ color, fontSize: 18 }}>‚è∞</Text>  // Emoji que indica tiempo futuro
          )
        }}
      />
    </Tab.Navigator>
  );
};

/**
 * Componente principal de la aplicaci√≥n
 * Configura el Stack Navigator ra√≠z y el contenedor de navegaci√≥n
 */
export default function App() {
  return (
    <NavigationContainer>
      {/* Stack Navigator principal - permite navegaci√≥n modal */}
      <Stack.Navigator initialRouteName="MainTabs">

        {/* Pantalla principal: Navegador de pesta√±as */}
        <Stack.Screen
          name="MainTabs"
          component={TabNavigator}
          options={{ headerShown: false }}     // Sin header - las tabs tienen su propia UI
        />

        {/* Pantalla modal: Detalles del lanzamiento */}
        <Stack.Screen
          name="LaunchDetail"
          component={LaunchDetailScreen}
          options={{ title: 'Detalles del Lanzamiento' }}  // Header con t√≠tulo descriptivo
        />
      </Stack.Navigator>

      {/* StatusBar autom√°tica que se adapta al contenido y tema del sistema */}
      <StatusBar style="auto" />
    </NavigationContainer>
  );
}
